apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
    {{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pgbouncer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        deployedAt: {{ now | quote }}
      labels:
        {{- include "pgbouncer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pgbouncer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if or .Values.tls.enabled .Values.configurationFile.enabled }}
      volumes:
        {{- if .Values.tls.enabled }}
        - name: tls-secrets
          secret:
            secretName: {{ .Values.tls.secretName }}
        {{- end }}
        {{- if .Values.configurationFile.enabled }}
        - name: pgbouncer-config
          secret:
            secretName: {{ .Values.configSecretName }}-file
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.tls.enabled .Values.configurationFile.enabled }}
          volumeMounts:
            {{- if .Values.tls.enabled }}
            - name: tls-secrets
              mountPath: {{ .Values.tls.mountPath }}
              readOnly: {{ .Values.tls.volumeReadOnly }}
            {{- end }}
            {{- if .Values.configurationFile.enabled }}
            - name: pgbouncer-config
              mountPath: {{ .Values.configurationFile.mountPath }}
              readOnly: {{ .Values.configurationFile.readOnly }}
            {{- end }}
          {{- end }}
          ports:
            - name: postgres
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.containerEnv }}
            - name: "{{ $key }}"
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Values.configSecretName }}"
                  key: "{{ $key }}"
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
