nameOverride: ""
fullnameOverride: ""
image:
  repository: bitnami/pgbouncer
  tag: 1.21.0
  pullPolicy: IfNotPresent

pgbouncer:
  username: postgres
  # Provide the actual PostgreSQL password here.
  # We recommend using a secret to provide the password using the extraSecretConfigs or in an external secret. Use the key POSTGRESQL_PASSWORD key to provide the password.
  password: ""
  database: ${PGBOUNCER_DATABASE}
  postgresqlDatabase: ${PGBOUNCER_DATABASE}
  host: postgresql
  port: 5432
  setDatabaseUser: no
  setDatabasePassword: no
  connectQuery: ""

# Add extra enviroment varibles in
# "KEY": "VALUE"
extraConfigs: []

# Add extra secret enviroment varibles in
# "KEY": "VALUE"
extraSecretConfigs: []
# use an existing secret for the password. If set to false, extraSecretConfigs will be ignored.
createExtraConfigsSecret: true
# set to the name of the secret to use. Make sure the secret exists in the same namespace as the chart is deployed in if createExtraConfigsSecret is set to false.
extraSecretConfigsSecretName: "pgbouncer-config-secret"

tls:
  enabled: true
  certificatesSecret: oaf-tls
  certFilename: tls.crt
  certKeyFilename: tls.key

service:
  port: 6432
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  className: "nginx"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# podSecurityContext:
#   fsGroup: 1001
podSecurityContext: {}

# imagePullSecrets
#   - name: myRegistryKeySecretName
imagePullSecrets: []

podDisruptionBudget:
  enabled: true
  minAvailable: 1
  maxUnavailable: 0

networkPolicy:
  enabled: false
